#!/usr/bin/ruby

class SubDlTrigger
  attr_accessor :id
  attr_accessor :name
  attr_accessor :saveFolder
  attr_accessor :fullName
  attr_accessor :files
  attr_accessor :cmd
  attr_accessor :downloader
  attr_accessor :downloaders

  def initialize(arguments)
    @id = arguments[0]
    @name = arguments[1]
    @saveFolder = arguments[2]
    @fullName = File.expand_path("#{@saveFolder}/#{@name}")
    @extensions = ['.mkv','.mpeg','.mpg','.avi']
    @downloaders = ["periscope"] ## At the moment, only periscope support since
                                 ## subliminal doesn't have the ability to
                                 ## store search parameters into a file
    @files = Array.new
    @downloader = nil
    locateDownloader
  end

  def locateDownloader
    ENV['PATH'].split(":").each { |path|
      @downloaders.each { |tool|
        tmpTool = File.expand_path("#{path}/#{tool}")
        if File.file?(tmpTool) then
          @downloader =  tmpTool
          break
        end
        if @downloader != nil then
          break
        end
      }
    }
  end

 def shellescape(str)
    return "''" if str.empty?
    str = str.dup
    str.gsub!(/([^A-Za-z0-9_\-.,:\/@\n])/n, "\\\\\\1")
    str.gsub!(/\n/, "'\n'")
    return str
  end

  def download(fileName)
    cmd = "#{@downloader} '#{fileName}'"
    %x[#{cmd}>>/dev/null 2>&1]
  end

  def isVideoFile(name)
    @extensions.include?(File.extname(name).downcase)
  end

  def run
    if File.directory?(@fullName) then
      Dir.glob("#{shellescape(@fullName)}/**",0).each { |entry|
        @files << entry if isVideoFile(entry)
      }
    else
      @files << shellescape(entry) if isVideoFile(entry)
    end

    @files.each{ |entry|
      download(entry)
    }
  end

end

if ARGV.length == 3 then
  dl = SubDlTrigger.new(ARGV)
  dl.run
else
  puts "meep!"
end

